/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/* Programmer: Atul R
 * Date: 2022-3-30
 * Program Name: Matching Game
 * Program Description: This program uses arrays to simulate a matching game.
 * A grid of cards will be displayed and the user is to select 2 cards at a time
 * looking for matching cards. The goal of this game is to see how quickly
 * the user can find the matches.
*/

package u2a3_matchgame;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JButton;
/**
 *
 * @author Atul
 * The applications main frame
 */
public class MatchingGameView extends javax.swing.JFrame {
    
    //Creating arrays to store the cards in
    ArrayList <String> cards = new ArrayList();
    ArrayList <String> set = new ArrayList();
    //Creating variables for the images that will be displayed
    ImageIcon a = new ImageIcon(getClass().getResource("/u2a3_matchgame/Finlandball.jpg"));
    ImageIcon b = new ImageIcon(getClass().getResource("/u2a3_matchgame/Franceball.jpg"));
    ImageIcon c = new ImageIcon(getClass().getResource("/u2a3_matchgame/Germanyball.jpg"));
    ImageIcon d = new ImageIcon(getClass().getResource("/u2a3_matchgame/Irelandball.jpg"));
    ImageIcon e = new ImageIcon(getClass().getResource("/u2a3_matchgame/Netherlandsball.jpg"));
    ImageIcon f = new ImageIcon(getClass().getResource("/u2a3_matchgame/Polandball.jpg"));
    ImageIcon g = new ImageIcon(getClass().getResource("/u2a3_matchgame/Spainball.jpg"));
    ImageIcon h = new ImageIcon(getClass().getResource("/u2a3_matchgame/Swedenball.jpg"));
    ImageIcon i = new ImageIcon(getClass().getResource("/u2a3_matchgame/Ukball.jpg"));
    ImageIcon j = new ImageIcon(getClass().getResource("/u2a3_matchgame/Ukraineball.jpg"));
    ImageIcon back = new ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"));
    ImageIcon done = new ImageIcon(getClass().getResource("/u2a3_matchgame/done.jpg"));
    // Creates the counters and the variable to determine how many cards are left to guess
    int count, c1, c2;
    int cardsLeft = 20;
    //This array is used to determine whether a card has been pressed, or if it has already gotten a pair
    int[] change = new int[20];
    //Creates an imageicon array so the images can be sorted through
    ImageIcon[] images = new ImageIcon[]{a,b,c,d,e,f,g,h,i,j};
    //Creating an array for the buttons (filled when play is pressed)
    JButton[] cardButton; 
    
    /**
     * Creates new form matchGameGUI
     */
    public MatchingGameView() {
        super("Countryball Matching Game");
        initComponents();
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTitle = new javax.swing.JLabel();
        Card1 = new javax.swing.JButton();
        Card2 = new javax.swing.JButton();
        Card3 = new javax.swing.JButton();
        Card4 = new javax.swing.JButton();
        Card5 = new javax.swing.JButton();
        Card6 = new javax.swing.JButton();
        Card7 = new javax.swing.JButton();
        Card8 = new javax.swing.JButton();
        Card9 = new javax.swing.JButton();
        Card10 = new javax.swing.JButton();
        Card11 = new javax.swing.JButton();
        Card12 = new javax.swing.JButton();
        Card13 = new javax.swing.JButton();
        Card14 = new javax.swing.JButton();
        Card15 = new javax.swing.JButton();
        Card16 = new javax.swing.JButton();
        Card17 = new javax.swing.JButton();
        Card18 = new javax.swing.JButton();
        Card19 = new javax.swing.JButton();
        Card20 = new javax.swing.JButton();
        play = new javax.swing.JButton();
        guessAgain = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        description = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        mainTitle.setForeground(new java.awt.Color(255, 51, 0));
        mainTitle.setText("Matching Game");

        Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card1MouseClicked(evt);
            }
        });

        Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card2MouseClicked(evt);
            }
        });

        Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card3MouseClicked(evt);
            }
        });

        Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card4MouseClicked(evt);
            }
        });

        Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card5MouseClicked(evt);
            }
        });

        Card6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card6MouseClicked(evt);
            }
        });

        Card7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card7MouseClicked(evt);
            }
        });

        Card8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card8MouseClicked(evt);
            }
        });

        Card9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card9MouseClicked(evt);
            }
        });

        Card10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card10MouseClicked(evt);
            }
        });

        Card11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card11MouseClicked(evt);
            }
        });

        Card12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card12MouseClicked(evt);
            }
        });

        Card13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card13MouseClicked(evt);
            }
        });

        Card14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card14MouseClicked(evt);
            }
        });

        Card15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card15MouseClicked(evt);
            }
        });

        Card16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card16MouseClicked(evt);
            }
        });

        Card17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card17MouseClicked(evt);
            }
        });

        Card18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card18MouseClicked(evt);
            }
        });

        Card19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card19MouseClicked(evt);
            }
        });

        Card20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/u2a3_matchgame/cardback.jpg"))); // NOI18N
        Card20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card20MouseClicked(evt);
            }
        });

        play.setText("Play");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        guessAgain.setText("Guess Again");
        guessAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessAgainActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        description.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        description.setText("Click the Play button to start, be sure to click Guess Again after each pair guess");
        description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Card16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Card17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Card18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Card19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Card20))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Card1)
                                    .addComponent(Card6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(Card11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(Card2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Card3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Card4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Card7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Card8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Card9))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Card12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Card13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Card14)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Card15)
                                    .addComponent(Card5)
                                    .addComponent(Card10)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(play)
                        .addGap(34, 34, 34)
                        .addComponent(guessAgain)
                        .addGap(18, 18, 18)
                        .addComponent(exit)
                        .addGap(26, 26, 26)
                        .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(mainTitle)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainTitle)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Card2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Card7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Card4)
                                    .addComponent(Card5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Card3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Card8, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Card9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Card10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Card15)
                            .addComponent(Card13)
                            .addComponent(Card12)
                            .addComponent(Card14)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Card1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Card6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Card11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Card16, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Card18, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Card19, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(Card17, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Card20, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(play)
                    .addComponent(description)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exit)
                        .addComponent(guessAgain)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionActionPerformed
/**
 * Exits the program
 * @param evt 
 */
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        //Exits the program
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed
/**
 * Starts the game and randomly assigns cards to the display
 * @param evt 
 */
    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        //Fills the button array
        cardButton = new JButton[]{Card1,Card2,Card3,Card4,Card5,Card6,Card7,Card8,
                                            Card9,Card10,Card11,Card12,Card13,Card14,Card15,Card16,Card17,
                                            Card18,Card19,Card20};
        //Clearing the previous arrays to ensure no overlap
        set.clear();
        cards.clear();
        for (int i = 0; i<20; i++) {
                cardButton[i].setIcon(back);
                change[i] = 1;
            }
        //Sets the description text
        description.setText("Click the Play button to start, be sure to click Guess Again after each pair guess");
 
        //Creates an array to list the cards out in order
        String temp; 
        for (int i = 0; i <= 9; i++) {
            for (int j = 1; j <= 2; j++) {
                temp = Integer.toString(i);
                set.add(temp);  
            }    
        }
        // Reassigns the cards in random positions
        for (int i = 0; i < 20; i++) {
            double index = Math.floor(Math.random() * (20-i));
            int index1 = (int) index;
            cards.add(set.get(index1));
            set.remove(set.get(index1));
        }
        
    System.out.println(Arrays.toString(change));
    System.out.println(cards); 
    }//GEN-LAST:event_playActionPerformed
/**
 * Checks what happens when a certain card is clicked
 * @param evt 
 */
    //Card 1-20 mouseclicked all have the same function, so only card 1 is commented
    private void Card1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card1MouseClicked
        //If the value is not 1 (NOT pressed yet, then do nothing)
        if (change[0] != 1) {   
        }
        //But if it isnt pressed, it works
        else {
            //Takes the value of the card pressed from the ArrayList that shows which card is assigned to which picture
            int temp = Integer.parseInt(cards.get(0));

            //Then, takes the value of that card, and displays the image accordingly
            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card1.setIcon(images[i]);
                }
            }
            //Adds 1 to the counter, so if this is the first press it is at 1, or if it is second it is 2
            count++;
            //Then, adds the value of the card press to either c1 or c2 depending on which press it was, then temporarily
            //sets the value of the card in the change arraylist (which shows which pairs have been guessed) to zero to check them
            if (count == 1) {
                c1 = temp;
                change[0] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[0] = 0;
            }
           
        }
    }//GEN-LAST:event_Card1MouseClicked

    private void Card2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card2MouseClicked
        if (change[1] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(1));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card2.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[1] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[1] = 0;
            }
        }
       
    }//GEN-LAST:event_Card2MouseClicked

    private void Card3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card3MouseClicked
        if (change[2] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(2));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card3.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[2] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[2] = 0;
            }
        }
       
    }//GEN-LAST:event_Card3MouseClicked

    private void Card4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card4MouseClicked
        if (change[3] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(3));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card4.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[3] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[3] = 0;
            }
        }
       
    }//GEN-LAST:event_Card4MouseClicked

    private void Card5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card5MouseClicked
        if (change[4] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(4));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card5.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[4] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[4] = 0;
            }
        }
       
    }//GEN-LAST:event_Card5MouseClicked

    private void Card6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card6MouseClicked
        if (change[5] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(5));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card6.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[5] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[5] = 0;
            }
        }
        
    }//GEN-LAST:event_Card6MouseClicked

    private void Card7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card7MouseClicked
        if (change[6] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(6));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card7.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[6] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[6] = 0;
            }
        }
       
    }//GEN-LAST:event_Card7MouseClicked

    private void Card8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card8MouseClicked
        if (change[7] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(7));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card8.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[7] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[7] = 0;
            }
        }
        
    }//GEN-LAST:event_Card8MouseClicked

    private void Card9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card9MouseClicked
        if (change[8] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(8));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card9.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[8] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[8] = 0;
            }
        }
        
    }//GEN-LAST:event_Card9MouseClicked

    private void Card10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card10MouseClicked
        if (change[9] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(9));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card10.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[9] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[9] = 0;
            }
        }
       
    }//GEN-LAST:event_Card10MouseClicked

    private void Card11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card11MouseClicked
        if (change[10] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(10));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card11.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[10] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[10] = 0;
            }
        }
       
    }//GEN-LAST:event_Card11MouseClicked

    private void Card12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card12MouseClicked
        if (change[11] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(11));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card12.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[11] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[11] = 0;
            }
        }
       
    }//GEN-LAST:event_Card12MouseClicked

    private void Card13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card13MouseClicked
        if (change[12] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(12));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card13.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[12] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[12] = 0;
            }
        }
        
    }//GEN-LAST:event_Card13MouseClicked

    private void Card14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card14MouseClicked
        if (change[13] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(13));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card14.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[13] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[13] = 0;
            }
        }
       
    }//GEN-LAST:event_Card14MouseClicked

    private void Card15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card15MouseClicked
        if (change[14] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(14));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card15.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[14] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[14] = 0;
            }
        }
      
    }//GEN-LAST:event_Card15MouseClicked

    private void Card16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card16MouseClicked
        if (change[15] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(15));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card16.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[15] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[15] = 0;
            }
        }
   
    }//GEN-LAST:event_Card16MouseClicked

    private void Card17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card17MouseClicked
        if (change[16] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(16));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card17.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[16] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[16] = 0;
            }
        }
       
    }//GEN-LAST:event_Card17MouseClicked

    private void Card18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card18MouseClicked
        if (change[17] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(17));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card18.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[17] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[17] = 0;
            }
        }
        
    }//GEN-LAST:event_Card18MouseClicked

    private void Card19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card19MouseClicked
        if (change[18] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(18));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card19.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[18] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[18] = 0;
            }
        }
      
    }//GEN-LAST:event_Card19MouseClicked

    private void Card20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card20MouseClicked
        if (change[19] != 1) {   
        }
        else {
            int temp = Integer.parseInt(cards.get(19));

            for (int i = 0; i < cards.size(); i++) {
                if (temp == i) {
                    Card20.setIcon(images[i]);
                }
            }

            count++;
            if (count == 1) {
                c1 = temp;
                change[19] = 0;
            } 
            else if (count == 2) {
                c2 = temp;
                change[19] = 0;
            }
        }
       
    }//GEN-LAST:event_Card20MouseClicked
/**
 * Allows the player to guess after they have picked their cards
 * @param evt 
 */
    private void guessAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessAgainActionPerformed
        
        //Resets the counter to zero as this is only pressed after a pair has been guessed
        count = 0;
        //Checks if the 2 cards that were pressed are the same
        if (c1 == c2) {
            //Then checks each card and see if their value is "0" (pressed) and changes them to being counted as completed)
            for (int i = 0; i<20; i++) {
                if (change[i] == 0) {
                    cardButton[i].setIcon(done);
                    change[i] = 2;
                    //then lowers the cards left counter to signify 2 have been paired 
                    //(subtracts by 1 as it runs once for each card
                    cardsLeft-=1;
                }
            }   
        } 

        //If the 2 cards pressed are not the same, then change their image back to being flipped down.
        else {
            for (int i = 0; i<20; i++) {
                if (change[i] == 0) {
                    cardButton[i].setIcon(back);
                    change[i] = 1;
                
                }
            }
        }
  
       
        //If there are no cards left to guess, then the textbox will display "Congratulations!" to show you have won
        if (cardsLeft == 0) {
                description.setText("Congratulations! Press Play to Play Again!");
            }
        /*System.out.println(cardsLeft);
        System.out.println(cards); */
      
    }//GEN-LAST:event_guessAgainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatchingGameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatchingGameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatchingGameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchingGameView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new MatchingGameView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Card1;
    private javax.swing.JButton Card10;
    private javax.swing.JButton Card11;
    private javax.swing.JButton Card12;
    private javax.swing.JButton Card13;
    private javax.swing.JButton Card14;
    private javax.swing.JButton Card15;
    private javax.swing.JButton Card16;
    private javax.swing.JButton Card17;
    private javax.swing.JButton Card18;
    private javax.swing.JButton Card19;
    private javax.swing.JButton Card2;
    private javax.swing.JButton Card20;
    private javax.swing.JButton Card3;
    private javax.swing.JButton Card4;
    private javax.swing.JButton Card5;
    private javax.swing.JButton Card6;
    private javax.swing.JButton Card7;
    private javax.swing.JButton Card8;
    private javax.swing.JButton Card9;
    private javax.swing.JTextField description;
    private javax.swing.JButton exit;
    private javax.swing.JButton guessAgain;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JButton play;
    // End of variables declaration//GEN-END:variables
}
