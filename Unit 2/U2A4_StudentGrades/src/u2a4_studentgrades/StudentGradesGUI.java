/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/* Programmer: Atul R
 * Date: 2022-4-6
 * Program Name: Student Grades
 * Program Description: This program uses 2d arrays to take user input (student grades),
 * and perform calculations with them. It can display the average of the grades for one student,
 * or all students added, up to 15.
*/
package u2a4_studentgrades;

import java.util.ArrayList;



/**
 *
 * @author Atul 
 */
public class StudentGradesGUI extends javax.swing.JFrame {
    //Creating the 2d array which will hold the data of the students name and their grades
    static String[][] gradeReport = new String[15][5];
    //Count variable so the program can determine which part of the array to add the new data to
    int count = 0;
   
    /**
     * Creates new form StudentGradesGUI
     */
    public StudentGradesGUI() {
        super ("Student Grades");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        nameTitle = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        exampleInput = new javax.swing.JLabel();
        test1Label = new javax.swing.JLabel();
        test2Label = new javax.swing.JLabel();
        test3Label = new javax.swing.JLabel();
        test4Label = new javax.swing.JLabel();
        test1Input = new javax.swing.JTextField();
        test2Input = new javax.swing.JTextField();
        test3Input = new javax.swing.JTextField();
        test4Input = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputBox = new javax.swing.JTextArea();
        add = new javax.swing.JButton();
        studentAverage = new javax.swing.JButton();
        list = new javax.swing.JButton();
        courseAverage = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(51, 0, 204));
        Title.setText("Student Grades");

        nameTitle.setText("First and Last Name:");

        nameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameInputActionPerformed(evt);
            }
        });

        exampleInput.setText("Ex. James Watershed");

        test1Label.setText("Test 1:");

        test2Label.setText("Test 2:");

        test3Label.setText("Test 3:");

        test4Label.setText("Test 4:");

        outputBox.setColumns(20);
        outputBox.setRows(5);
        jScrollPane1.setViewportView(outputBox);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        studentAverage.setText("Student Average");
        studentAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAverageActionPerformed(evt);
            }
        });

        list.setText("List");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });

        courseAverage.setText("Course Average");
        courseAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseAverageActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Title)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(nameTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nameInput))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(exampleInput)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(test1Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(test2Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                                .addComponent(test3Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                                                .addComponent(test4Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(test1Input, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(test2Input, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(40, 40, 40)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                                        .addComponent(list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGap(12, 12, 12)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(courseAverage, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(studentAverage)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(test3Input, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(test4Input, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(reset)
                                                    .addGap(42, 42, 42)
                                                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(17, 17, 17)))))
                                    .addGap(0, 24, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(72, 72, 72))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Title)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTitle)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exampleInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(test1Label)
                    .addComponent(test1Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add)
                    .addComponent(studentAverage))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(test2Label)
                            .addComponent(test2Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(test3Label)
                            .addComponent(test3Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(test4Label)
                            .addComponent(test4Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(list)
                            .addComponent(courseAverage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exit)
                            .addComponent(reset))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        //Closes the application
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //Gets the inputted values, then adds them to the 2d array
        String name = nameInput.getText();
        String test1 = test1Input.getText();
        String test2 = test2Input.getText();
        String test3 = test3Input.getText();
        String test4 = test4Input.getText();
        
        gradeReport[count][0] = name;
        gradeReport[count][1] = test1;
        gradeReport[count][2] = test2;
        gradeReport[count][3] = test3;
        gradeReport[count][4] = test4;
        //The count variable is used to make sure that one students values dont override anothers.
        count++;
    }//GEN-LAST:event_addActionPerformed

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        //First empties the output box
        outputBox.setText("");
        //Then goes through the 2d array where the data is stored, and finds all the information
        for (int i = 0; i < 14; i++) {
            //This checks whether or not the place in the array is NOT empty, so it does not print "null" everywhere
            if (gradeReport[i][0] != null) { 
                outputBox.append(gradeReport[i][0] + "'s Test Scores: ");
            }
            for (int j = 1; j < 5; j++) {
                if (gradeReport[i][j] != null) {
                    outputBox.append(gradeReport[i][j] + "%, ");
                }
            }
            //Then pushes the next students data to the next line so it isnt all on one line
            outputBox.append("\n");
        }
    }//GEN-LAST:event_listActionPerformed

    private void studentAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAverageActionPerformed
        //Takes the name of the student currently inputted, and clears the output box
        String name = nameInput.getText();
        outputBox.setText("");
        
        //It goes through the array and checks of the name is the same as the inputted name
        for (int i = 0; i < 14; i++) {
            if (gradeReport[i][0].equals(name)) {
                //Then gathers all their data and calculates the average
                double test1Int = Double.parseDouble(gradeReport[i][1]);
                double test2Int = Double.parseDouble(gradeReport[i][2]);
                double test3Int = Double.parseDouble(gradeReport[i][3]);
                double test4Int = Double.parseDouble(gradeReport[i][4]);
                double average = (test1Int + test2Int + test3Int + test4Int) / 4;
                outputBox.setText(name + "'s Average: " + String.format("%.2f", average) + "%");
            } 
        }
    }//GEN-LAST:event_studentAverageActionPerformed

    private void courseAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseAverageActionPerformed
        //Creates 4 array lists to store the test data for each course
        ArrayList<Double> test1Scores = new ArrayList<>();
        ArrayList<Double> test2Scores = new ArrayList<>();
        ArrayList<Double> test3Scores = new ArrayList<>();
        ArrayList<Double> test4Scores = new ArrayList<>();
        //Then creates variables that will hold the average of the course, and clears the output box
        double course1Average, course2Average, course3Average, course4Average;
        course1Average=course2Average=course3Average=course4Average = 0;
        outputBox.setText("");
        
        //Goes through the 2d array and checks all of the test values
        for (int i = 0; i < 14; i++) {
            for (int j = 1; j < 5; j++) {
                if (gradeReport[i][j] != null) { // If the value is NOT empty
                    // It then checks what test the course is for, and adds that mark to the respective array
                    switch (j) {
                        case 1:
                            test1Scores.add(Double.parseDouble(gradeReport[i][j]));
                            break;
                        case 2:
                            test2Scores.add(Double.parseDouble(gradeReport[i][j]));
                            break;
                        case 3:
                            test3Scores.add(Double.parseDouble(gradeReport[i][j]));
                            break;
                        case 4:
                            test4Scores.add(Double.parseDouble(gradeReport[i][j]));
                            break;    
                    }
                }     
            }  
        }
        // Then goes through each of the test scores array and adds up the values
        for(Double i : test1Scores) {
             course1Average += i;
        }
        for(Double i : test2Scores) {
             course2Average += i;
        }
        for(Double i : test3Scores) {
             course3Average += i;
        }
        for(Double i : test4Scores) {
             course4Average += i;
        }
        // Then dividing them by however many scores there were, to find the average
        course1Average = course1Average / test1Scores.size();  
        course2Average = course2Average / test1Scores.size();
        course3Average = course3Average / test1Scores.size();
        course4Average = course4Average / test1Scores.size();
        //Then displays this on the output box
        outputBox.append("Course 1 Average: " + String.format("%.2f", course1Average) + "%" + "\n");
        outputBox.append("Course 2 Average: " + String.format("%.2f", course2Average) + "%" + "\n");
        outputBox.append("Course 3 Average: " + String.format("%.2f", course3Average) + "%" + "\n");
        outputBox.append("Course 4 Average: " + String.format("%.2f", course4Average) + "%" + "\n");
        
        
    }//GEN-LAST:event_courseAverageActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        //Resets all of the data on screen and in arrays
        outputBox.setText("");
        nameInput.setText("");
        test1Input.setText("");
        test2Input.setText("");
        test3Input.setText("");
        test4Input.setText("");
        //Iterates through the gradeReport 2d array and empties it
        for (int i = 0; i < 15; i ++) {
            for (int j = 0; j < 5; j++) {
                gradeReport[i][j] = null;
            }
        }
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGradesGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton add;
    private javax.swing.JButton courseAverage;
    private javax.swing.JLabel exampleInput;
    private javax.swing.JButton exit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton list;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameTitle;
    private javax.swing.JTextArea outputBox;
    private javax.swing.JButton reset;
    private javax.swing.JButton studentAverage;
    private javax.swing.JTextField test1Input;
    private javax.swing.JLabel test1Label;
    private javax.swing.JTextField test2Input;
    private javax.swing.JLabel test2Label;
    private javax.swing.JTextField test3Input;
    private javax.swing.JLabel test3Label;
    private javax.swing.JTextField test4Input;
    private javax.swing.JLabel test4Label;
    // End of variables declaration//GEN-END:variables
}
